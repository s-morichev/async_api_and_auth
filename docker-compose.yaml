services:
  nginx:
    build:
      context: ./docker/nginx
      tags:
        - "nginx_sprint_4"
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
      target: development
      tags:
        - "backend_sprint_4"
    container_name: backend
    volumes:
      - ./backend/src/:/opt/backend/
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - elasticsearch

  etl:
    build:
      context: .
      dockerfile: ./docker/etl/Dockerfile
      target: development
      tags:
        - "etl_sprint_4"
    container_name: etl
    volumes:
      - ./etl/src/:/opt/etl/
    env_file:
      - .env
    depends_on:
      - postgres
      - elasticsearch

  redis:
    image: redis:7.0.5-alpine
    container_name: redis
    command: redis-server --save 20 1 --loglevel warning --user ${REDIS_USER} on >${REDIS_PASSWORD} ~* &* +@all --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_USER: ${REDIS_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"

  postgres:
    build:
      context: ./docker/postgres
      tags:
        - "postgres_sprint_4"
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DB_NAME}

  elasticsearch:
    image: elasticsearch:8.5.1
    container_name: elasticsearch
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

volumes:
  postgres_data:
  elasticsearch_data: