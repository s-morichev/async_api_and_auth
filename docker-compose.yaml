services:
  nginx:
    build:
      context: ./docker/nginx
      tags:
        - "nginx_all_services"
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - backend

  backend:
    restart: "always"
    build:
      context: ./backend
      dockerfile: ./docker/Dockerfile
      target: development
      tags:
        - "backend"
    container_name: backend
    volumes:
      - ./backend/src/:/opt/app/
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - elasticsearch_movies
      - redis_backend

  redis_backend:
    image: redis:7.0.5-alpine
    container_name: redis_backend
    command: redis-server --requirepass ${REDIS_BACKEND_PASSWORD} --maxmemory ${REDIS_BACKEND_MAXMEMORY} --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_BACKEND_PORT}:6379"

  etl_movies:
    restart: "always"
    build:
      context: ./etl
      dockerfile: ./docker/Dockerfile
      target: development
      tags:
        - "etl_movies"
    container_name: etl_movies
    volumes:
      - etl_movies_data:/opt/app/var/
    env_file:
      - .env
    depends_on:
      - postgres_movies
      - elasticsearch_movies

  postgres_movies:
    image: postgres:15.1-alpine
    container_name: postgres_movies
    volumes:
      - postgres_movies_data:/var/lib/postgresql/data/
      - ./docker/postgres/dump_with_marks.gz:/docker-entrypoint-initdb.d/dump.sql.gz
    ports:
      - "${PG_MOVIES_PORT}:5432"
    environment:
      - POSTGRES_USER=${PG_MOVIES_USER}
      - POSTGRES_PASSWORD=${PG_MOVIES_PASSWORD}
      - POSTGRES_DB=${PG_MOVIES_DB_NAME}

  elasticsearch_movies:
    image: elasticsearch:8.5.1
    container_name: elasticsearch_movies
    volumes:
      - elasticsearch_movies_data:/usr/share/elasticsearch/data
    ports:
      - "${ELK_MOVIES_PORT}:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms2g -Xmx2g
    ulimits:
      nofile:
        soft: 65536
        hard: 65536

  auth:
    restart: "always"
    build:
      context: ./auth
      dockerfile: ./docker/Dockerfile
      target: development
      tags:
        - "auth"
    container_name: auth
    volumes:
      - ./auth/src/:/opt/app/
    ports:
      - "5000:5000"
    env_file:
      - .env
    depends_on:
      - postgres_auth
      - redis_auth

  redis_auth:
    image: redis:7.0.5-alpine
    container_name: redis_auth
    command: redis-server --requirepass ${REDIS_AUTH_PASSWORD} --save 20 1
    volumes:
      - redis_auth_data:/data
    ports:
      - "${REDIS_AUTH_PORT}:6379"

  postgres_auth:
    image: postgres:15.1-alpine
    container_name: postgres_auth
    volumes:
      - postgres_auth_data:/var/lib/postgresql/data/
    ports:
      - "${PG_AUTH_PORT}:5432"
    environment:
      - POSTGRES_USER=${PG_AUTH_USER}
      - POSTGRES_PASSWORD=${PG_AUTH_PASSWORD}
      - POSTGRES_DB=${PG_AUTH_DB_NAME}

volumes:
  postgres_movies_data:
  elasticsearch_movies_data:
  etl_movies_data:
  postgres_auth_data:
  redis_auth_data: